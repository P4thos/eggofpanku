docs/Developer - Installation Guide.txt

Summary:
This is a walk-through for developers installing, compiling, and building a
deployable install file from the Egg of Pan'ku source. This installation guide is 
assuming the usage of PyScripter IDE and Python 2.7

Prerequisites:
You should have some programming knowledge.

Step 1: Installing Python

	The Python interpreter is required in order to run the application and compile the source into a functional
binary. An IDE is also required for proper development. These and other Python components will be required for
development.

1a. PyScripter (or other Python IDE)

Link to PyScripter download: http://code.google.com/p/pyscripter/

You can also download Python 2.7 and use the included IDE.

Link to Python 2.7: http://www.python.org/download/releases/2.7/ 

1b. Easy_Install

Once you have installed PyScripter (or Python 2.7) you'll need to the Python SetupTools.

Link to SetupTools: http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe#md5=57e1e64f6b7c7f1d2eddfc9746bbaf20

Once you've downloaded the executable, follow the instructions to install SetupTools on the Windows Platform.

Link to Setup Instructions: http://pypi.python.org/pypi/setuptools#windows

1c. Add Modules

You'll need to install the PyOpenGL, PIL, simplejson and wxPython modules in order to run this project. The modules
will need to be registered with your Python 2.7 installation. This should occur automatically if only one version
of Python is installed. Make sure to choose version 2.7 if you have multiple versions of Python installed.

wxPython and PIL will have their own installers.

1c-1: wxPython for Python 2.7
Link to Download: http://www.wxpython.org/download.php
  
1c-2: PIL (Python Image Library) for Python 2.7
Link to Download: http://www.pythonware.com/products/pil/

1d. Add Eggs

At this time, py2exe does not have support for zipped Eggs. To be safe, use the --always-unzip option from the 
command line in order to ensure the module is deployed into the site-packages location properly.
Easy_Install can be used to automatically download and install the required files. You can do this by opening a 
command prompt and typing "easy_install --always-unzip [moduleName]".

1d-1. pyOpenGL for Python 2.7
Command: easy_install --always-unzip pyOpenGL
  
1d-2. simplejson for Python 2.7
Command: easy_install --always-unzip simplejson

This will install all the Eggs needed to build the project. If the project builds in the interpreter but fails 
as an executable, check to make sure that your modules have not been installed as zipped eggs.

If you have problems running "easy_install", make sure that your Python27/scripts directory is in your PATH
environment variable.

2. SVN
To get the source code, you'll need to have a version of SVN installed. Tortoise SVN works wells.  
Download Link: http://tortoisesvn.tigris.org/ TortoiseSVN

3. Source Code
Google Code is currently hosting the source for the project. It can be accessed directly through the website and
will also provide information required for SVN access to the code base.

Web Link: http://code.google.com/p/eopk/source/checkout

4. Compiling the Stand Alone Application

To compile the application to an executable you'll need to download some tools:
  
4a. Py2exe

Py2exe is a module that converts Python to an executable binary that can be run without the Python interpreter.

Download Link: http://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/py2exe-0.6.9.win32-py2.7.exe/download

4b. NSIS

NSIS is a Windows installation packaging program that makes a program installer to deploy the program to other users.

Download Link: http://nsis.sourceforge.net/Download will make the installation files.

4c. UPX

UPX is used to compress all of the files for distribution.

Download Link: http://upx.sourceforge.net/#download


4d-1. Putting it all together

Once all the tools are gathered. Its a simple matter of testing the build by opening EoPK.py and running it.
If all goes well, the program will launch and ask you for the card DB. Otherwise you'll need to check the
error log for missing dependencies.

4d-2. Build for Distribution

To build the distributable installer, run the setup.py file. It will go through a build process and output
an installer in the ./dist folder. If something goes wrong, check the Interpreter log and the p2exe-errors.log
file for debugging information.

5. Where to go next

Join the project on the Google Code website.

Website Link: http://code.google.com/p/eopk/